{"version":3,"sources":["index.js"],"names":["colorArray","Box","url","this","props","text","trim","replace","author","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","id","style","color","href","target","rel","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_9___default","variant","size","backgroundColor","onClick","newQuote","React","Component","Main","_this","Object","_Users_antonio_Desktop_freeCodeCamp_fcc_fel_fcc_random_quote_machine_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_antonio_Desktop_freeCodeCamp_fcc_fel_fcc_random_quote_machine_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_antonio_Desktop_freeCodeCamp_fcc_fel_fcc_random_quote_machine_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","fetchQuote","colorIdx","Math","floor","random","quoteIdx","axios","get","then","response","obj","data","quotes","setState","quote","bgColor","isLoaded","catch","error","state","bind","_Users_antonio_Desktop_freeCodeCamp_fcc_fel_fcc_random_quote_machine_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","document","getElementById","_this$state","message","ReactDOM","render"],"mappings":"6PAQIA,EAAa,CACP,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAGrCC,mLAGE,IAEIC,EAAM,0CAFCC,KAAKC,MAAMC,KAAKC,OAAOC,QAAQ,KAAM,KAEc,MADjDJ,KAAKC,MAAMI,OAAOF,OAG/B,OACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAOC,MAAO,CAACC,MAAOX,KAAKC,MAAMU,QAAvC,IAAiDX,KAAKC,MAAMC,KAA5D,KACAI,EAAAC,EAAAC,cAAA,KAAGC,GAAG,SAASC,MAAO,CAACC,MAAOX,KAAKC,MAAMU,QAASX,KAAKC,MAAMI,QAC7DC,EAAAC,EAAAC,cAAA,KAAGI,KAAMb,EAAKc,OAAO,SAASJ,GAAG,cAAcK,IAAI,uBAAsBR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAQS,QAAQ,QAAQC,KAAK,KAAKP,MAAO,CAACQ,gBAAiBlB,KAAKC,MAAMU,QAAtE,gBACzEL,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAQE,GAAG,YAAYU,QAASnB,KAAKC,MAAMmB,SAAUJ,QAAQ,QAAQC,KAAK,KAAKP,MAAO,CAACQ,gBAAiBlB,KAAKC,MAAMU,QAAnH,qBAZEU,IAAMC,WAkBlBC,cACF,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAzB,KAAAuB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA7B,QAgBJ8B,WAAa,WAET,IAAIC,EAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC3BC,EAAWH,KAAKC,MAAsB,IAAhBD,KAAKE,UAC/BE,IAAMC,IAAI,0IACLC,KAAK,SAAAC,GACF,IAAIC,EAAMD,EAASE,KAAKC,OAAOP,GAC/BX,EAAKmB,SAAS,CACVzC,KAAMsC,EAAII,MACVvC,OAAQmC,EAAInC,OACZwC,QAAShD,EAAWkC,GACpBe,UAAU,MAGjBC,MAAM,SAAAC,GACHxB,EAAKmB,SAAS,CACVG,UAAU,EACVE,MAAOA,OAlCTxB,EAuCdJ,SAAW,WACPI,EAAKM,cAtCLN,EAAKyB,MAAQ,CACTH,UAAU,EACV5C,KAAO,GACPG,OAAQ,GACR2C,MAAO,GACPH,QAAS,IAEbrB,EAAKM,WAAaN,EAAKM,WAAWoB,KAAhBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAClBA,EAAKJ,SAAWI,EAAKJ,SAAS8B,KAAdzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAVNA,mFAcVxB,KAAK8B,8CA8BLsB,SAASC,eAAe,QAAQ3C,MAAMQ,gBAAkBlB,KAAKiD,MAAMJ,QAD9D,IAAAS,EAEuBtD,KAAKiD,MAAzBD,EAFHM,EAEGN,MAAOF,EAFVQ,EAEUR,SACf,OAAIE,EACO1C,EAAAC,EAAAC,cAAA,qBAAawC,EAAMO,SAClBT,EAIJxC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACJH,EAAAC,EAAAC,cAACV,EAAD,CACII,KAAQF,KAAKiD,MAAM/C,KACnBG,OAAUL,KAAKiD,MAAM5C,OACrBe,SAAYpB,KAAKoB,SACjBT,MAASX,KAAKiD,MAAMJ,WARzBvC,EAAAC,EAAAC,cAAA,gCAlDAa,IAAMC,WAmEzBkC,IAASC,OAAOnD,EAAAC,EAAAC,cAACe,EAAD,MAAU6B,SAASC,eAAe","file":"static/js/main.1a8410b6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Button from 'react-bootstrap/Button';\n\nimport axios from 'axios';\n\n\nlet colorArray = [\n          '#FF824D', '#00ADB5', '#303841', '#B8D8D8', \n          '#BD1E1E', '#D88373', '#18206F', '#17255A',\n          '#264653', '#2A9D8F', '#E9C46A', '#E76F51',\n          '#CD8987', '#7A9E9F', '#4F6367', '#FE5F55',\n          '#313715', '#60712F', '#B7990D', '#9B1D20',\n        ];\n          \nclass Box extends React.Component {\n\n    render() {\n        let text = this.props.text.trim().replace(/;/g, ',');\n        let author = this.props.author.trim();\n        let url = \"https://twitter.com/intent/tweet?text=\\\"\" + text + \"\\\"  \" + author;\n\n        return (\n            <div>\n                <p id=\"text\" style={{color: this.props.color}}>\"{this.props.text}\"</p>\n                <p id=\"author\" style={{color: this.props.color}}>{this.props.author}</p>\n                <a href={url} target=\"_blank\" id=\"tweet-quote\" rel=\"noopener noreferrer\"><Button variant=\"light\" size=\"sm\" style={{backgroundColor: this.props.color}}>Tweet Quote</Button></a>\n                <Button id=\"new-quote\" onClick={this.props.newQuote} variant=\"light\" size=\"sm\" style={{backgroundColor: this.props.color}}>New Quote</Button>\n            </div>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoaded: false,\n            text : '',\n            author: '',\n            error: '',\n            bgColor: '',\n        }\n        this.fetchQuote = this.fetchQuote.bind(this);\n        this.newQuote = this.newQuote.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchQuote();    \n    }\n\n    fetchQuote = () => {\n\n        let colorIdx = Math.floor(Math.random() * 20);\n        let quoteIdx = Math.floor(Math.random() * 102);\n        axios.get('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n            .then(response => {\n                let obj = response.data.quotes[quoteIdx];\n                this.setState({\n                    text: obj.quote,\n                    author: obj.author,\n                    bgColor: colorArray[colorIdx],\n                    isLoaded: true,\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    isLoaded: true,\n                    error: error,\n                });\n            })\n    }\n\n    newQuote = () => {\n        this.fetchQuote();\n    }\n\n    render() {\n        document.getElementById('root').style.backgroundColor = this.state.bgColor;\n        const { error, isLoaded } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            return <div>Loading...</div>\n        } else {\n            return (\n                <div id=\"quote-box\">\n                    <Box \n                        text = {this.state.text}\n                        author = {this.state.author}\n                        newQuote = {this.newQuote}\n                        color = {this.state.bgColor}\n                    />\n                </div>\n            );\n        }\n    }\n}\n\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n\n\n\n"],"sourceRoot":""}