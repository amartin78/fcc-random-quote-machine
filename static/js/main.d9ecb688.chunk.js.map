{"version":3,"sources":["index.js"],"names":["Box","text","this","props","trim","author","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","href","target","onClick","newQuote","React","Component","Main","_this","Object","_Users_antonio_Desktop_freeCodeCamp_fcc_fel_fcc_random_quote_machine_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_antonio_Desktop_freeCodeCamp_fcc_fel_fcc_random_quote_machine_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_antonio_Desktop_freeCodeCamp_fcc_fel_fcc_random_quote_machine_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","fetchQuote","fetch","then","res","json","result","setState","error","isLoaded","quoteText","quoteAuthor","state","_this$state","message","ReactDOM","render","document","getElementById"],"mappings":"6NAIMA,0LAGE,IAAIC,EAAO,0CAA6CC,KAAKC,MAAMF,KAAKG,OAAS,MAASF,KAAKC,MAAME,OAAOD,OAE5G,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,GAAG,QAAQP,KAAKC,MAAMF,MACzBK,EAAAC,EAAAC,cAAA,KAAGC,GAAG,UAAUP,KAAKC,MAAME,QAC3BC,EAAAC,EAAAC,cAAA,KAAGE,KAAMT,EAAMU,OAAO,SAASF,GAAG,eAAcH,EAAAC,EAAAC,cAAA,8BAChDF,EAAAC,EAAAC,cAAA,UAAQC,GAAG,YAAYG,QAASV,KAAKC,MAAMU,UAA3C,qBAVEC,IAAMC,YAgBlBC,cACF,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhB,KAAAc,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhB,KAAAgB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApB,QAUJqB,WAAa,WACTC,MAAM,uGACLC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACG,SAACG,GACGX,EAAKY,SAAS,CACVC,MAAO,KACPC,UAAU,EACV9B,KAAM2B,EAAOI,UACb3B,OAAQuB,EAAOK,eAGvB,SAACH,GACGb,EAAKY,SAAS,CACVE,UAAU,EACVD,aA1BFb,EAoCdJ,SAAW,WACPI,EAAKM,cAlCLN,EAAKiB,MAAQ,CACTH,UAAU,EACV9B,KAAO,GACPI,OAAQ,GACRyB,MAAO,IAPDb,mFAiCVf,KAAKqB,8CAOA,IAAAY,EACuBjC,KAAKgC,MAAzBJ,EADHK,EACGL,MAAOC,EADVI,EACUJ,SACf,OAAID,EACOxB,EAAAC,EAAAC,cAAA,qBAAasB,EAAMM,SAClBL,EAIJzB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACJH,EAAAC,EAAAC,cAACR,EAAD,CACIC,KAAQC,KAAKgC,MAAMjC,KACnBI,OAAUH,KAAKgC,MAAM7B,OACrBQ,SAAYX,KAAKW,YAPtBP,EAAAC,EAAAC,cAAA,gCA9CAM,IAAMC,WA+DzBsB,IAASC,OAAOhC,EAAAC,EAAAC,cAACQ,EAAD,MAAUuB,SAASC,eAAe","file":"static/js/main.d9ecb688.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Box extends React.Component {\n\n    render() {\n        let text = \"https://twitter.com/intent/tweet?text=\\\"\" + this.props.text.trim() + \"\\\"  \" + this.props.author.trim();\n\n        return (\n            <div>\n                <p id=\"text\">{this.props.text}</p>\n                <p id=\"author\">{this.props.author}</p>\n                <a href={text} target=\"_blank\" id=\"tweet-quote\"><button>Tweet Quote</button></a>\n                <button id=\"new-quote\" onClick={this.props.newQuote}>New Quote</button>\n            </div>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isLoaded: false,\n            text : '',\n            author: '',\n            error: ''\n        }\n    }\n\n    fetchQuote = () => {\n        fetch(\"https://cors-anywhere.herokuapp.com/api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    error: null,\n                    isLoaded: true,\n                    text: result.quoteText,\n                    author: result.quoteAuthor,\n                });\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        )\n    }\n\n    componentDidMount() {\n        this.fetchQuote();\n    }\n\n    newQuote = () => {\n        this.fetchQuote();\n    }\n\n    render() {\n        const { error, isLoaded } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>\n        } else if (!isLoaded) {\n            return <div>Loading...</div>\n        } else {\n            return (\n                <div id=\"quote-box\">\n                    <Box \n                        text = {this.state.text}\n                        author = {this.state.author}\n                        newQuote = {this.newQuote}\n                    />\n                </div>\n            );\n        }\n    }\n}\n\n\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}